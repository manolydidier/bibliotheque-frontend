import { createSlice } from '@reduxjs/toolkit';

const initialState = {
  langue:'fr',
  auth: {
    loading: false,
    isAuthenticated: !!localStorage.getItem('auth_token'),
    token: localStorage.getItem('auth_token') || null,
    user: localStorage.getItem('user') ||null, 
    error: null,
    roles: [],
    permissions: [],
  },
};

export const librarySlice = createSlice({
  name: 'library',
  initialState,
  reducers: {
    loginStart: (state) => {
      state.auth.loading = true;
      state.auth.error = null;
    },
    loginSuccess: (state, action) => {
      state.auth.isAuthenticated = true;
      state.auth.user = action.payload.user;
      state.auth.roles = action.payload.roles || [];
      state.auth.permissions = action.payload.permissions || [];
     
      
      state.auth.loading = false;
      state.auth.error = null;
    },
    loginFailure: (state, action) => {
      state.auth.loading = false;
      state.auth.error = action.payload;
    },
    logoutUser: (state) => {
      localStorage.removeItem('auth_token');
      localStorage.removeItem('user');
      state.auth.isAuthenticated = false;
      state.auth.user = null;
      state.auth.roles = [];
      state.auth.permissions = [];
    },
    language :(state, action) => {
      state.langue = action.payload.langue;
    }

  },
});

export const {
  loginStart,
  loginSuccess,
  loginFailure,
  logoutUser,
  language
} = librarySlice.actions;

export default librarySlice.reducer;